# 🔒 Steganography Tool – Project Explanation  

## 📌 What is Steganography?  
**Steganography** is the technique of **hiding secret information inside a normal file (like an image, audio, or video)** in such a way that no one can detect the presence of hidden data.  
Unlike **cryptography** (which scrambles data), **steganography conceals the existence of data itself**.  

👉 In this project, we use **Image Steganography** with the **Least Significant Bit (LSB) method**.  

---

## 🎯 Project Goal  
The goal of this project is to build a **Python-based tool** that allows:  

✔️ **Encoding (hiding)** secret text messages inside images.  
✔️ **Decoding (extracting)** hidden messages from stego-images.  

✅ This ensures **secure communication without raising suspicion**, since the output looks like a normal image.  

---

## ⚙️ How It Works  

### 🔐 Encoding Process  
1. Take an **input image** (PNG/BMP, lossless format).  
2. Take a **secret text message** from the user.  
3. Convert the message into **binary form**.  
4. Hide message bits inside the **Least Significant Bits (LSB)** of image pixels.  

   **Example:**  
   - Pixel value: `10101100`  
   - Secret bit: `1`  
   - New pixel: `10101101`  

   🎨 The visual change is **invisible to the human eye**.  

5. Save the new image as **output.png** (stego-image).  

---

### 🔓 Decoding Process  
1. Load the **stego-image (output.png)**.  
2. Extract the **Least Significant Bits** of pixel values.  
3. Reconstruct the hidden binary message.  
4. Convert it back to **human-readable text**.  

---

## 🖥️ Features of the Tool  
✨ Supports both **CLI (Command Line Interface)** and **GUI (Tkinter)**  
✨ Built with **Pillow** (image handling) and **Stepic** (steganography functions)  
✨ Works on **Linux, Windows, and MacOS**  
✨ Simple **GUI buttons** for Encode and Decode  
✨ Output images look **exactly like the original** (no visible distortion)  

---

## 📂 Technologies Used  
| Technology | Purpose |
|------------|---------|
| **Python 3** | Main programming language |
| **Pillow** | Image manipulation |
| **Stepic** | LSB steganography |
| **Tkinter** | GUI design |
| **Parrot OS** | Testing environment |

---

## 📸 Example Workflow  
1️⃣ User opens GUI and enters message:  
